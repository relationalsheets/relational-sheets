// Code generated by templ@v0.2.334 DO NOT EDIT.

package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func table(t Table, cells [][]Cell) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<thead><tr>")
		if err != nil {
			return err
		}
		for _, col := range t.OrderedCols() {
			var var_2 = []any{templ.KV("is-primary", col.IsPrimaryKey)}
			err = templ.RenderCSSItems(ctx, templBuffer, var_2...)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("<th class=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_2).String()))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" onmouseup=\"document.getElementById(&#39;column&#39;).value = this.textContent\" hx-trigger=\"click\" hx-post=\"/table\" hx-target=\"#table\">")
			if err != nil {
				return err
			}
			var var_3 string = col.Name
			_, err = templBuffer.WriteString(templ.EscapeString(var_3))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</tr></thead><tbody>")
		if err != nil {
			return err
		}
		for _, row := range cells {
			_, err = templBuffer.WriteString("<tr>")
			if err != nil {
				return err
			}
			for _, cell := range row {
				var var_4 = []any{templ.KV("is-null", cell.Null)}
				err = templ.RenderCSSItems(ctx, templBuffer, var_4...)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("<td class=\"")
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString(templ.EscapeString(templ.CSSClasses(var_4).String()))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("\">")
				if err != nil {
					return err
				}
				var var_5 string = cell.Value
				_, err = templBuffer.WriteString(templ.EscapeString(var_5))
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</td>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</tr>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</tbody><input type=\"hidden\" name=\"name\" value=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(t.FullName()))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><input type=\"hidden\" id=\"column\" name=\"column\">")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
