package main

import (
    "fmt"
)

templ sheet(name string, cols []Column, colspan string, cells [][]Cell) {
    <thead>
        <tr id="header-row">
            <th>
                <button onclick="htmx.removeClass(htmx.find('#new-row'), 'hide')
                                 htmx.removeClass(htmx.find('#new-row-err-container'), 'hide')">
                    +
                </button>
            </th>
        for _, col := range cols {
            <th class={ templ.KV("is-primary", col.IsPrimaryKey) }
                onmouseup="document.getElementById('column').value = this.textContent"
                hx-post="/table"
                hx-include="#header-row,[name=table_name]">
                { col.Name }
            </th>
        }
            <input type="hidden"
                   id="column"
                   name="column"/>
            <input type="hidden"
                   id="hide"
                   name="hide"
                   value="false"/>
        </tr>
    </thead>
    <tbody>
        <tr id="new-row" class="hide">
            <td style="border-bottom: none">
                <button hx-post="/table"
                        hx-include="#new-row,[name=table_name]"
                        hx-target-400="#new-row-err">
                    Add
                </button>
            </td>
        for _, col := range cols {
            <td style="border-bottom: none">
                <input name={ "column-" + col.Name }/>
            </td>
        }
        </tr>
        <tr id="new-row-err-container" class="hide">
            <td id="new-row-err"
                colspan={ colspan }
                style="border-top: none"
                class="has-text-danger">
            </td>
        </tr>
    for _, row := range cells {
        <tr>
            <td></td>
        for _, cell := range row {
            <td class={ templ.KV("is-null", !cell.NotNull) }>
                { cell.Value }
            </td>
        }
        </tr>
    }
        <input type="hidden"
               name="table_name"
               value={ name }/>
    </tbody>
}

func RenderSheet(s Sheet, cells [][]Cell) templ.Component {
    cols := s.OrderedCols()
    colspan := fmt.Sprintf("%d", len(cols) + 1)
    return sheet(s.table.FullName(), cols, colspan, cells)
}
