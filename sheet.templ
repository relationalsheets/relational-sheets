package main

import (
    "fmt"
)

templ colName(name string) {
    <span hx-post="/set-column-prefs"
        hx-vals={ fmt.Sprintf("js:{col_name:\"%s\",hide:shiftPressed}", name) }>
        { name }
    </span>
}

templ extraColName(i int, name string) {
    <input name="col_name"
           hx-vals={ fmt.Sprintf("{\"col_index\":%d}", i) }
           value={ name }
           hx-post="/rename-column"
           hx-swap="none" />
}

templ addColButton() {
    <button id="add-col-button"
        hx-post="/add-column">
        + Col
    </button>
}

templ extraCell(i, j int, cell SheetCell) {
    <td class={ "extra-cell", templ.KV("is-null", !cell.NotNull) }>
        <input name="formula"
               class="extra-cell-formula hide"
               value={ cell.formula }
               hx-post="/set-cell"
               hx-vals={ fmt.Sprintf("{\"i\":%d,\"j\":%d}", i, j) }
               hx-target="closest td"
               hx-swap="outerHTML"/>
        <span class="extra-cell-value">
            { cell.Value }
        </span>
    </td>
}

templ sheet(name string, cols []Column, extraCols []SheetColumn, cells [][]Cell) {
    <thead>
        <tr id="header-row">
            <th>
                <button onclick="htmx.removeClass(htmx.find('#new-row'), 'hide')
                                 htmx.removeClass(htmx.find('#new-row-err-container'), 'hide')">
                    + Row
                </button>
            </th>
        for i, col := range cols {
            <th class={ templ.KV("is-pkey", col.IsPrimaryKey) }>
                if len(extraCols) > 0 || i + 1 < len(cols) {
                    @colName(col.Name)
                } else {
                <div class="flex">
                    @colName(col.Name)
                    @addColButton()
                </div>
                }
            </th>
        }
        for i, col := range extraCols {
            if i + 1 < len(extraCols) {
            <th>
                @extraColName(i, col.Name)
            </th>
            } else {
            <th>
                <div class="flex">
                    @extraColName(i, col.Name)
                    @addColButton()
                </div>
            </th>
            }
        }
        </tr>
    </thead>
    <tbody>
        <tr id="new-row" class="hide">
            <td style="border-bottom: none">
                <button hx-post="/add-row"
                        hx-include="#new-row"
                        hx-target-400="#new-row-err">
                    Add
                </button>
            </td>
        for _, col := range cols {
            <td style="border-bottom: none">
                <input name={ "column-" + col.Name }/>
            </td>
        }
        </tr>
        <tr id="new-row-err-container" class="hide">
            <td id="new-row-err"
                colspan={ fmt.Sprintf("%d", len(cols)) }
                style="border-top: none"
                class="has-text-danger">
            </td>
        </tr>
    for j, row := range cells {
        <tr class="body-row">
            <td></td>
        for _, cell := range row {
            <td class={ templ.KV("is-null", !cell.NotNull) }>
                <span>{ cell.Value }</span>
            </td>
        }
        for i, extraCol := range extraCols {
            @extraCell(i, j, extraCol.cells[j])
        }
        </tr>
    }
    </tbody>
}

func RenderSheet(s Sheet, cells [][]Cell) templ.Component {
    return sheet(s.table.FullName(), s.OrderedCols(), s.extraCols, cells)
}
